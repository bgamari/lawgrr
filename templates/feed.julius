var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ").parse;

function Timeseries(container) {
    this.svg = d3.select(container).append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    this.x = d3.time.scale()
        .range([0, width])

    this.y = d3.scale.linear()
        .range([height, 0]);

    this.xAxis = d3.svg.axis()
        .scale(this.x)
        .orient("bottom")
        .tickSubdivide(10);

    this.yAxis = d3.svg.axis()
        .scale(this.y)
        .orient("left");

    this.updatePlot = function(data, textStatus, jqXHR) {
        data.points.forEach(function(d) {
            d.time = parseDate(d.time);
        });
        var points = data.points;

        this.x.domain(d3.extent(points, function(d) { return d.time; }));
        this.x.ticks(d3.time.minutes, 15);
        this.y.domain(d3.extent(points, function(d) { return d.value; }));

        this.svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(this.xAxis)
            .text("Time");

        this.svg.append("g")
            .attr("class", "y axis")
            .call(this.yAxis)
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text(data.units);

        var x = this.x, y = this.y;
        var line = d3.svg.line()
            .x(function(d) { return x(d.time); })
            .y(function(d) { return y(d.value); });

        this.svg.append("path")
            .datum(points)
            .attr("class", "line")
            .attr("d", line);
    };

    this.fetchAndUpdate = function() {
        jQuery.ajax("@{FeedPointsR feedId}", { dataType: "json", success: this.updatePlot, context: this });
    };
}

timeseries = new Timeseries("#plot-container");
timeseries.fetchAndUpdate();
window.setInterval(10000, timeseries.fetchAndUpdate);

